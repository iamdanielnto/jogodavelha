{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Entypo } from '@expo/vector-icons';\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Quadrado(props) {\n  var jogador = props.jogador;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      fezJogada = _useState2[0],\n      setJogada = _useState2[1];\n\n  var icone = _jsx(Text, {});\n\n  if (fezJogada == 1) {\n    icone = _jsx(Entypo, {\n      name: \"cross\",\n      size: 32,\n      color: \"black\"\n    });\n  } else if (fezJogada == 2) {\n    icone = _jsx(Entypo, {\n      name: \"circle\",\n      size: 32,\n      color: \"black\"\n    });\n  }\n\n  function jogada() {\n    if (fezJogada == 0) {\n      setJogada(jogador);\n      var posicao = props.posicao;\n      props.tabuleiro(posicao);\n      var novo = jogador == 1 ? 2 : 1;\n      props.alteraJogador(novo);\n    }\n  }\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: jogada,\n    children: _jsx(View, {\n      style: css.box,\n      children: icone\n    })\n  });\n}\nvar css = StyleSheet.create({\n  box: {\n    borderColor: '#000000',\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    width: 80,\n    height: 80,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/user/Documents/jogodavelha/Quadrado.js"],"names":["Entypo","useState","Quadrado","props","jogador","fezJogada","setJogada","icone","jogada","posicao","tabuleiro","novo","alteraJogador","css","box","StyleSheet","create","borderColor","borderStyle","borderWidth","width","height","display","alignItems","justifyContent"],"mappings":";;;;;AACA,SAAQA,MAAR,QAAqB,oBAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EACf;AAEI,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;;AAEA,kBAA8BH,QAAQ,CAAC,CAAD,CAAtC;AAAA;AAAA,MAAOI,SAAP;AAAA,MAAkBC,SAAlB;;AAED,MAAIC,KAAK,GAAG,KAAC,IAAD,KAAZ;;AAEA,MAAIF,SAAS,IAAI,CAAjB,EACA;AACKE,IAAAA,KAAK,GAAG,KAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAE,EAA3B;AAA+B,MAAA,KAAK,EAAC;AAArC,MAAR;AACJ,GAHD,MAGO,IAAIF,SAAS,IAAI,CAAjB,EACP;AACIE,IAAAA,KAAK,GAAG,KAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAE,EAA5B;AAAgC,MAAA,KAAK,EAAC;AAAtC,MAAR;AACH;;AAED,WAASC,MAAT,GACA;AACI,QAAGH,SAAS,IAAI,CAAhB,EACA;AACEC,MAAAA,SAAS,CAACF,OAAD,CAAT;AACA,UAAMK,OAAO,GAAGN,KAAK,CAACM,OAAtB;AACAN,MAAAA,KAAK,CAACO,SAAN,CAAgBD,OAAhB;AACA,UAAIE,IAAI,GAAIP,OAAO,IAAG,CAAX,GAAe,CAAf,GAAmB,CAA9B;AACAD,MAAAA,KAAK,CAACS,aAAN,CAAoBD,IAApB;AACD;AAIJ;;AAEA,SACI,KAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEH,MAAnC;AAAA,cACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEK,GAAG,CAACC,GAAjB;AAAA,gBACGP;AADH;AADJ,IADJ;AAOH;AAED,IAAMM,GAAG,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAE1BF,EAAAA,GAAG,EAAC;AACAG,IAAAA,WAAW,EAAE,SADb;AAEAC,IAAAA,WAAW,EAAE,OAFb;AAGAC,IAAAA,WAAW,EAAE,CAHb;AAIAC,IAAAA,KAAK,EAAE,EAJP;AAKAC,IAAAA,MAAM,EAAE,EALR;AAMAC,IAAAA,OAAO,EAAE,MANT;AAOAC,IAAAA,UAAU,EAAE,QAPZ;AAQAC,IAAAA,cAAc,EAAE;AARhB;AAFsB,CAAlB,CAAZ","sourcesContent":["import {View, Text, StyleSheet, TouchableWithoutFeedback} from 'react-native';\nimport {Entypo} from '@expo/vector-icons';\nimport {useState} from 'react';\n\nexport default function Quadrado(props)\n{\n\n    const jogador = props.jogador\n\n    const [fezJogada, setJogada]= useState(0)\n\n   let icone = <Text></Text>;\n\n   if (fezJogada == 1)\n   {\n        icone = <Entypo name=\"cross\" size={32} color=\"black\"/>\n   } else if (fezJogada == 2)\n   {\n       icone = <Entypo name=\"circle\" size={32} color=\"black\"/>\n   }\n\n   function jogada ()\n   {\n       if(fezJogada == 0 )\n       {\n         setJogada(jogador)\n         const posicao = props.posicao\n         props.tabuleiro(posicao)\n         let novo = (jogador ==1)? 2 : 1;\n         props.alteraJogador(novo);\n       }\n\n\n\n   }\n\n    return(\n        <TouchableWithoutFeedback onPress={jogada}>\n            <View style={css.box}>\n              {icone}\n            </View>\n        </TouchableWithoutFeedback>\n    );\n}\n\nconst css = StyleSheet.create({\n\n    box:{\n        borderColor: '#000000',\n        borderStyle: \"solid\",\n        borderWidth: 1,\n        width: 80,\n        height: 80,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n\n})"]},"metadata":{},"sourceType":"module"}