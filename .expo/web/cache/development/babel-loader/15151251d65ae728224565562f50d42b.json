{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Entypo } from '@expo/vector-icons';\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Quadrado() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      jogador = _useState2[0],\n      setJogador = _useState2[1];\n\n  var icone = _jsx(Text, {});\n\n  if (jogador == 1) {\n    icone = _jsx(Entypo, {\n      name: \"cross\",\n      size: 32,\n      color: \"black\"\n    });\n  } else if (jogador == 2) {\n    icone = _jsx(Entypo, {\n      name: \"circle\",\n      size: 32,\n      color: \"black\"\n    });\n  }\n\n  function jogada() {\n    if (jogador == 0) {\n      setJogador(1);\n    } else if (jogador == 1) {\n      setJogador(2);\n    }\n  }\n\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: jogada,\n    children: _jsx(View, {\n      style: css.box,\n      children: icone\n    })\n  });\n}\nvar css = StyleSheet.create({\n  box: {\n    borderColor: '#000000',\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    width: 80,\n    height: 80,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/user/Documents/jogodavelha/Quadrado.js"],"names":["Entypo","useState","Quadrado","jogador","setJogador","icone","jogada","css","box","StyleSheet","create","borderColor","borderStyle","borderWidth","width","height","display","alignItems","justifyContent"],"mappings":";;;;;AACA,SAAQA,MAAR,QAAqB,oBAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAEA,eAAe,SAASC,QAAT,GACf;AAEI,kBAA8BD,QAAQ,CAAC,CAAD,CAAtC;AAAA;AAAA,MAAOE,OAAP;AAAA,MAAgBC,UAAhB;;AAED,MAAIC,KAAK,GAAG,KAAC,IAAD,KAAZ;;AAEA,MAAIF,OAAO,IAAI,CAAf,EACA;AACKE,IAAAA,KAAK,GAAG,KAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAE,EAA3B;AAA+B,MAAA,KAAK,EAAC;AAArC,MAAR;AACJ,GAHD,MAGO,IAAIF,OAAO,IAAI,CAAf,EACP;AACIE,IAAAA,KAAK,GAAG,KAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAE,EAA5B;AAAgC,MAAA,KAAK,EAAC;AAAtC,MAAR;AACH;;AAED,WAASC,MAAT,GACA;AACI,QAAIH,OAAO,IAAG,CAAd,EAAgB;AAClBC,MAAAA,UAAU,CAAC,CAAD,CAAV;AACG,KAFD,MAEO,IAAID,OAAO,IAAI,CAAf,EAAiB;AACpBC,MAAAA,UAAU,CAAC,CAAD,CAAV;AACH;AACJ;;AAEA,SACI,KAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEE,MAAnC;AAAA,cACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,GAAG,CAACC,GAAjB;AAAA,gBACGH;AADH;AADJ,IADJ;AAOH;AAED,IAAME,GAAG,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAE1BF,EAAAA,GAAG,EAAC;AACAG,IAAAA,WAAW,EAAE,SADb;AAEAC,IAAAA,WAAW,EAAE,OAFb;AAGAC,IAAAA,WAAW,EAAE,CAHb;AAIAC,IAAAA,KAAK,EAAE,EAJP;AAKAC,IAAAA,MAAM,EAAE,EALR;AAMAC,IAAAA,OAAO,EAAE,MANT;AAOAC,IAAAA,UAAU,EAAE,QAPZ;AAQAC,IAAAA,cAAc,EAAE;AARhB;AAFsB,CAAlB,CAAZ","sourcesContent":["import {View, Text, StyleSheet, TouchableWithoutFeedback} from 'react-native';\nimport {Entypo} from '@expo/vector-icons';\nimport {useState} from 'react';\n\nexport default function Quadrado()\n{\n\n    const [jogador, setJogador] = useState(0)\n\n   let icone = <Text></Text>;\n\n   if (jogador == 1)\n   {\n        icone = <Entypo name=\"cross\" size={32} color=\"black\"/>\n   } else if (jogador == 2)\n   {\n       icone = <Entypo name=\"circle\" size={32} color=\"black\"/>\n   }\n\n   function jogada ()\n   {\n       if (jogador ==0){\n     setJogador(1)\n       } else if (jogador == 1){\n           setJogador(2)\n       }\n   }\n\n    return(\n        <TouchableWithoutFeedback onPress={jogada}>\n            <View style={css.box}>\n              {icone}\n            </View>\n        </TouchableWithoutFeedback>\n    );\n}\n\nconst css = StyleSheet.create({\n\n    box:{\n        borderColor: '#000000',\n        borderStyle: \"solid\",\n        borderWidth: 1,\n        width: 80,\n        height: 80,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n\n})"]},"metadata":{},"sourceType":"module"}